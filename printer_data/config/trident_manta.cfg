# This file contains common pin mappings for the BIGTREETECH Manta M8P
# To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# See docs/Config_Reference.md for a description of parameters.

[mcu]
##	[X in MOTOR1] - B Motor
##	[Y in MOTOR2] - A Motor
##	[E in MOTOR8] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 8000    			#Max 4000
max_z_velocity: 15 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[temperature_sensor Manta]
sensor_type: temperature_mcu

[temperature_sensor CB1]
sensor_type: temperature_host

## Custom Chamber Temp
[thermistor WINSINN HT-NTC100K]
temperature1: 25.0
resistance1: 103180.0
temperature2: 150.0
resistance2: 1366.2
temperature3: 250.0
resistance3: 168.6

[temperature_sensor Chamber]
sensor_type: WINSINN HT-NTC100K
sensor_pin: PA1
pullup_resistor: 4700


#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on Motor1(B Motor)
[stepper_x]
step_pin: PE2
dir_pin: PB4
enable_pin: !PC11
microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 250
position_max: 250
homing_speed: 25   #Max 100
homing_retract_dist:0
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
diag_pin: PF3      # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 68  # 255 is most sensitive value, 0 is least sensitive
uart_pin: PC10
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

## Y Stepper on Motor2 (A Motor)
[stepper_y]
step_pin: PF12
dir_pin: PF11
enable_pin: !PB3
microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
position_endstop: 250
position_max: 250
homing_speed: 25  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
diag_pin: PF4      # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 67  # 255 is most sensitive value, 0 is least sensitive
uart_pin: PF13
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR3_A
[stepper_z]
step_pin: PD7
dir_pin: PD6
enable_pin: !PF10
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4    
microsteps: 32
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
## All builds use same Max Z
position_max: 250
position_min: -2.5
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PF9
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z1 Stepper - Rear  on Motor5
[stepper_z1]
step_pin: PC9
dir_pin: PC8
enable_pin: !PD1
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4  
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PD0
interpolate: true
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Front Right on Motor6
[stepper_z2]
step_pin: PA10
dir_pin: PA14
enable_pin: !PA15
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4  
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF8
interpolate: true
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


#[filament_switch_sensor material_0]
#switch_pin: PC1

#[filament_switch_sensor material_1]
#switch_pin: PC2

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - HE1
heater_pin: PB5 
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PA0
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.6
min_temp: 0
max_temp: 120

#####################################################################
# 	Fan Control
#####################################################################

[fan]
##	Print Cooling Fan - CNC_FAN0
pin: PE6
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##	Hotend Fan - CNC_FAN1
pin: PE0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[multi_pin my_fan]
pins: PE0, PE6
[heater_fan controller_fan]
##	Controller fan - CNC_FAN2
pin: multi_pin:my_fan
kick_start_time: 0.5
heater: heater_bed
heater_temp: 20.0

#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE2 Connector (Optional)
#pin: PA6
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
home_xy_position:125,125
speed:100
z_hop:10

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead
z_positions:
    -50, 18
    125, 298
    300, 18
points:
    30, 5
    125, 195
    220, 5
speed: 100
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.015

[bed_mesh]
speed: 300
mesh_min: 40, 40
mesh_max: 210, 210
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic

########################################
# EXP1 / EXP2 (display) pins
########################################

#[board_pins]
#aliases:
#    # EXP1 header
#    EXP1_1=PE9, EXP1_2=PE10,
#    EXP1_3=PE11, EXP1_4=PE12,
#    EXP1_5=PE13, EXP1_6=PE14,    # Slot in the socket on this side
#    EXP1_7=PE15, EXP1_8=PB10,
#    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
#    EXP2_1=PB14, EXP2_2=PB13,
#    EXP2_3=PF7, EXP2_4=PB12,
#    EXP2_5=PE7, EXP2_6=PB11,      # Slot in the socket on this side
#    EXP2_7=PE8, EXP2_8=<RST>,
#    EXP2_9=<GND>, EXP2_10=PC5

# See the sample-lcd.cfg file for definitions of common LCD displays.

#####################################################################
# 	Displays
#####################################################################

#[display]
#	mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
#	To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.2
#color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#       SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#       SET_LED LED=btt_mini12864 RED=0.4902 GREEN=0.8471 BLUE=1 INDEX=3 

[neopixel chamber]
pin: PA9
chain_count: 38
initial_RED: 0.6
initial_GREEN: 0.6
initial_BLUE: 0.6
color_order: RGB
#--------------------------------------------------------------------


#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    STATUS_HOMING
    G28
    STATUS_LEVELING
    Z_TILT_ADJUST
    STATUS_HOMING
    G28
    G0 X125 Y125 Z30 F3600
   
[gcode_macro PRINT_START]
gcode:
	{% set BED_TEMP=params.BED_TEMP|default(90)|float %}
	{% set EXTRUDER_TEMP=params.EXTRUDER_TEMP|default(150)|float %}
	
	# Home the printer
    STATUS_HOMING
	G90
	M83
	G28
    STATUS_OFF
	
	# Preheat the bed
    STATUS_HEATING
	M140 S{BED_TEMP}
	M190 S{BED_TEMP}
	M104 S150
	STATUS_OFF
	# Z probing sequence
    STATUS_LEVELING
	G28
	Z_TILT_ADJUST
	G28 Z
    STATUS_MESHING
	BED_MESH_CALIBRATE
	BED_MESH_PROFILE LOAD=default
    STATUS_OFF
	
	# Heat the extruder to the desired temperature
    STATUS_HEATING
	M104 S{EXTRUDER_TEMP}
	M109 S{EXTRUDER_TEMP}
    STATUS_OFF
	
	# Prime line sequence
    STATUS_BUSY
	G1 Z5 F3000 ; lift
	G1 X5 Y0 F1500 ; move to prime position
	G1 Z0.15 F3000 ; get ready to prime
	G92 E0 ; reset extrusion distance
	G1 X100 E40 F600 ; prime nozzle with adjusted extrusion / E__ based on how much you like
	
	# String removal circle after priming
	G1 Z0.2 F3000 ; adjust to 0.2mm above the bed
	G1 Y15 F10000 ; move the toolhead in the Y direction by 15 units
	
	# Execute the circle 3 times
	G2 I-5 J0 F10000 ; circle with 5mm radius
	G2 I-5 J0 F10000
	G2 I-5 J0 F10000
  
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    STATUS_OFF
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z15 F3000                    ; move nozzle up 15mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    
    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

